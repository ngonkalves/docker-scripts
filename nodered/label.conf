traefik.enable=true
traefik.docker.network=$TRAEFIK_NETWORK
# router: secure entrypoint
traefik.http.routers.router-$CONTAINER-secure.entryPoints=websecure
traefik.http.routers.router-$CONTAINER-secure.rule=Host(`$TRAEFIK_DOMAIN`)
traefik.http.routers.router-$CONTAINER-secure.tls=true
# router: apply middleware
traefik.http.routers.router-$CONTAINER-secure.middlewares=mdw-$CONTAINER-secured
# route: service declaration
traefik.http.routers.router-$CONTAINER-secure.service=srv-$CONTAINER
# middlewares: chain
traefik.http.middlewares.mdw-$CONTAINER-secured.chain.middlewares=chain-authelia@file
# router: secure entrypoint /ui
traefik.http.routers.router-${CONTAINER}ui-secure.entryPoints=websecure
traefik.http.routers.router-${CONTAINER}ui-secure.rule=Host(`${CONTAINER_SIMPLE_NAME}ui.$DOMAINNAME`)
traefik.http.routers.router-${CONTAINER}ui-secure.tls=true
# router: apply middleware /ui
traefik.http.routers.router-${CONTAINER}ui-secure.middlewares=mdw-${CONTAINER}ui-secured
# route: service declaration /ui
traefik.http.routers.router-${CONTAINER}ui-secure.service=srv-$CONTAINER
# middlewares: new middleware to add /ui path prefix
traefik.http.middlewares.mdw-${CONTAINER}ui-add-prefix-ui.addprefix.prefix=/ui
# middlewares: chain /ui
traefik.http.middlewares.mdw-${CONTAINER}ui-secured.chain.middlewares=chain-authelia@file,mdw-${CONTAINER}ui-add-prefix-ui
# service port
traefik.http.services.srv-$CONTAINER.loadbalancer.server.port=$TRAEFIK_PORT
